let canvas,ctx,sampleRate=44100;function renderSpectrogram(a,t,e,n){const o=Math.max(1,Math.floor(e*(1-n/100))),r=Math.max(1,Math.ceil((a.length-e)/o)),s=e/2;canvas.width=r,canvas.height=s;const l=ctx.createImageData(r,s),c=hannWindow(e),f=new Float32Array(e),h=new Float32Array(e);for(let t=0,n=0;n+e<=a.length;n+=o,t++){for(let t=0;t<e;t++)f[t]=a[n+t]*c[t],h[t]=0;fft(f,h);for(let a=0;a<s;a++){const e=Math.sqrt(f[a]*f[a]+h[a]*h[a]);let n=Math.log10(e+1e-12);n=Math.max(0,Math.min(1,n/5));const o=Math.floor(255*n),c=(s-1-a)*r+t;l.data[4*c]=o,l.data[4*c+1]=o,l.data[4*c+2]=o,l.data[4*c+3]=255}}ctx.putImageData(l,0,0),self.postMessage({type:"rendered"})}function hannWindow(a){const t=new Float32Array(a);for(let e=0;e<a;e++)t[e]=.5*(1-Math.cos(2*Math.PI*e/(a-1)));return t}function fft(a,t){const e=a.length;let n,o,r,s,l,c,f,h=0,d=0;for(d=1,h=0;d<e-1;d++){for(n=e>>1;h>=n;)h-=n,n>>=1;h+=n,d<h&&(c=a[d],a[d]=a[h],a[h]=c,c=t[d],t[d]=t[h],t[h]=c)}n=0,o=1;for(let M=0;M<Math.log2(e);M++)for(n=o,o<<=1,r=0,d=0;d<n;d++)for(s=Math.cos(-2*Math.PI*d/o),l=Math.sin(-2*Math.PI*d/o),h=d;h<e;h+=o){const e=h+n;c=s*a[e]-l*t[e],f=l*a[e]+s*t[e],a[e]=a[h]-c,t[e]=t[h]-f,a[h]+=c,t[h]+=f}}self.onmessage=a=>{const{type:t}=a.data;if("init"===t)canvas=a.data.canvas,sampleRate=a.data.sampleRate||sampleRate,ctx=canvas.getContext("2d");else if("render"===t){if(!ctx)return;renderSpectrogram(a.data.buffer,a.data.sampleRate||sampleRate,a.data.fftSize||1024,a.data.overlap||0)}};