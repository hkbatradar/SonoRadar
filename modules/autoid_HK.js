const speciesRules=[{name:"Hipposideros gentilis",rules:[{callType:"CF-FM",cfStart:[120,130],duration:[5,10],harmonic:[0,1,2,3]}]},{name:"Hipposideros armiger",rules:[{callType:"CF-FM",cfStart:[65,72],duration:[10,18],harmonic:[0,1,2,3]}]},{name:"Rhinolophus pusillus",rules:[{callType:"FM-CF-FM",cfStart:[100,110],duration:[30,70],harmonic:[0,1,2,3]}]},{name:"Rhinolophus sinicus",rules:[{callType:"FM-CF-FM",cfStart:[75,87],duration:[30,70],harmonic:[0,1,2,3]}]},{name:"Rhinolophus affinis",rules:[{callType:"FM-CF-FM",cfStart:[68,75],duration:[30,80],harmonic:[0,1,2,3]}]},{name:"Pipistrellus tenuis",rules:[{callType:"QCF",lowestFreq:[39,42],bandwidth:[1,5],duration:[5,10],harmonic:[0,1,2,3]}]},{name:"Pipistrellus abramus",rules:[{callType:"QCF",lowestFreq:[44,46],harmonic:[0,1,2,3]},{callType:"FM-QCF",lowestFreq:[46,50],highestFreq:[60,100],kneeFreq:[46,53],kneeLowBandwidth:[0,5],duration:[3,6],harmonic:[0,1,2]}]},{name:"Tylonycteris fulvida",rules:[{callType:"QCF",lowestFreq:[49,54],bandwidth:[2,5],duration:[5,8.5],harmonic:[0,1,2]},{callType:"FM, FM-QCF",lowestFreq:[49.5,57],highestFreq:[54.6,70],bandwidth:[5.1,15],duration:[6,11],harmonic:[0,1,2]},{callType:"FM, FM-QCF",lowestFreq:[49.5,55],highestFreq:[65.1,92],bandwidth:[15.1,45],duration:[6,11],harmonic:[0,1,2]},{callType:"FM, FM-QCF",lowestFreq:[55.1,60],highestFreq:[70,115],bandwidth:[15.1,60],duration:[5,7],harmonic:[0,1,2]}]},{name:"Hypsugo pulveratus",rules:[{callType:"QCF",lowestFreq:[32,36],harmonic:[0,1,2,3]}]},{name:"Pipistrellus ceylonicus",rules:[{callType:"QCF",lowestFreq:[30,32],harmonic:[0,1,2,3]}]},{name:"Nyctalus plancyi",rules:[{callType:"QCF",lowestFreq:[17.5,21],harmonic:[0,1,2,3]}]},{name:"Mops plicatus",rules:[{callType:"QCF",lowestFreq:[17.5,21],harmonic:[0,1,2,3]},{callType:"QCF",lowestFreq:[13,16.5],harmonic:[0,1,2,3]}]},{name:"Taphozous melanopogon",rules:[{callType:"QCF",lowestFreq:[24.5,26],harmonic:[0,1,2,3]}]}];function inRange(e,r){if(null==e||isNaN(e))return!1;if(Array.isArray(r[0]))return r.some((r=>inRange(e,r)));if("string"==typeof r[0]&&1===r.length){const e=r[0].match(/^(=|=>|>=|<|<=|>)\s*(\w+)$/);if(e){return{op:e[1],refField:e[2]}}}const[n,a]=r;return e>=n&&e<=a}export function autoIdHK(e={}){const r=["highestFreq","lowestFreq","kneeFreq","heelFreq","startFreq","endFreq","cfStart","cfEnd","duration","bandwidth","kneeLowTime","kneeLowBandwidth","heelLowBandwidth","kneeHeelBandwidth"],n=speciesRules.filter((n=>n.rules.some((n=>{if(n.callType){if(!n.callType.split(",").map((e=>e.trim())).includes(e.callType))return!1}return!(n.harmonic&&!n.harmonic.includes(e.harmonic))&&r.every((r=>{if(!n[r])return!0;if("string"==typeof n[r][0]&&1===n[r].length){const a=n[r][0].match(/^(=|=>|>=|<|<=|>)\s*(\w+)$/);if(a){const n=a[1],l=a[2],i=e[r],t=e[l];if(null==i||null==t||isNaN(i)||isNaN(t))return!1;switch(n){case"=":return i===t;case">":return i>t;case"<":return i<t;case">=":case"=>":return i>=t;case"<=":case"=<":return i<=t;default:return!1}}}return inRange(e[r],n[r])}))})))).map((e=>e.name));return n.length?n.join(" / "):"No species matched"}