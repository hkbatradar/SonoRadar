import{extractGuanoMetadata,parseGuanoMetadata}from"./guanoReader.js";import{getWavSampleRate}from"./fileLoader.js";import{addFilesToList,removeFilesByName,setFileMetadata,getCurrentIndex,getFileList}from"./fileState.js";import{showMessageBox}from"./messageBox.js";export function initDragDropLoader({targetElementId:e,wavesurfer:t,spectrogramHeight:a,colorMap:n,onPluginReplaced:o,onFileLoaded:r,onBeforeLoad:i,onAfterLoad:s,onSampleRateDetected:d}){const l=document.getElementById(e),c=document.getElementById("drop-overlay"),m=document.getElementById("upload-overlay"),f=document.getElementById("upload-progress-bar"),u=document.getElementById("upload-progress-text"),p=document.getElementById("fileNameText"),y=document.getElementById("guano-output"),g=document.getElementById("spectrogram-settings");let v=null;function w(){c.style.display="none",document.dispatchEvent(new Event("drop-overlay-hide"))}function E(e,t){if(f){const a=t>0?e/t*100:0;f.style.width=`${a}%`}u&&(u.textContent=`${e}/${t}`)}async function h(e){const a=Array.from(e).filter((e=>"audio/wav"===e.type||e.name.endsWith(".wav")));if(0===a.length)return void showMessageBox({message:"Only .wav files are supported."});var n;n=a.length,m&&(f&&(f.style.width="0%"),u&&(u.textContent=`0/${n}`),m.style.display="flex"),"function"==typeof i&&i();const l=a.sort(((e,t)=>e.name.localeCompare(t.name)));removeFilesByName("demo_recording.wav");const c=getFileList().length;addFilesToList(l,0);for(let e=0;e<l.length;e++){try{const t=await extractGuanoMetadata(l[e]),a=parseGuanoMetadata(t);setFileMetadata(c+e,a)}catch(t){setFileMetadata(c+e,{date:"",time:"",latitude:"",longitude:""})}E(e+1,l.length)}m&&(m.style.display="none"),await async function(e){if(!e)return;const a=await getWavSampleRate(e);"function"==typeof i&&i(),"function"==typeof r&&r(e),p&&(p.textContent=e.name);try{const t=await extractGuanoMetadata(e);y.textContent=t||"(No GUANO metadata found)";const a=parseGuanoMetadata(t),n=getCurrentIndex();setFileMetadata(n,a)}catch(e){y.textContent="(Error reading GUANO metadata)"}const n=URL.createObjectURL(e);v&&URL.revokeObjectURL(v),v=n,await t.load(n),"function"==typeof o&&o();const l=a||t?.options?.sampleRate||256e3;"function"==typeof d&&await d(l),g&&(g.textContent=`Sampling rate: ${l/1e3}kHz`),"function"==typeof s&&s(),document.dispatchEvent(new Event("file-loaded"))}(l[0])}let x=0;l.addEventListener("dragenter",(e=>{e.preventDefault(),x++,c.style.display="flex",document.dispatchEvent(new Event("drop-overlay-show"))})),l.addEventListener("dragleave",(e=>{e.preventDefault(),x--,0===x&&w()})),l.addEventListener("dragover",(e=>{e.preventDefault(),e.dataTransfer.dropEffect="move"})),l.addEventListener("drop",(async e=>{e.preventDefault(),x=0,w();h(await async function(e){if(!e.items)return Array.from(e.files);const t=async e=>{if(e.isFile)return new Promise((t=>{e.file((e=>t([e])),(()=>t([])))}));if(e.isDirectory){const a=e.createReader(),n=[],o=()=>new Promise((e=>{a.readEntries((async a=>{if(a.length)n.push(...a),e(await o());else{const a=await Promise.all(n.map(t));e(a.flat())}}),(()=>e([])))}));return o()}return[]},a=Array.from(e.items).map((e=>e.webkitGetAsEntry&&e.webkitGetAsEntry())).filter(Boolean);return a.length?(await Promise.all(a.map(t))).flat():Array.from(e.files)}(e.dataTransfer))}))}